{"name": "test_login_verification", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class='title']\"}\n  (Session info: chrome=121.0.6167.161); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF663BA7012+3522402]\n\t(No symbol) [0x00007FF6637C8352]\n\t(No symbol) [0x00007FF663675ABB]\n\t(No symbol) [0x00007FF6636BBF0E]\n\t(No symbol) [0x00007FF6636BC08C]\n\t(No symbol) [0x00007FF6636FE437]\n\t(No symbol) [0x00007FF6636DF09F]\n\t(No symbol) [0x00007FF6636FBDA3]\n\t(No symbol) [0x00007FF6636DEE03]\n\t(No symbol) [0x00007FF6636AF4D4]\n\t(No symbol) [0x00007FF6636B05F1]\n\tGetHandleVerifier [0x00007FF663BD9B9D+3730157]\n\tGetHandleVerifier [0x00007FF663C2F02D+4079485]\n\tGetHandleVerifier [0x00007FF663C275D3+4048163]\n\tGetHandleVerifier [0x00007FF6638FA649+718233]\n\t(No symbol) [0x00007FF6637D4A3F]\n\t(No symbol) [0x00007FF6637CFA94]\n\t(No symbol) [0x00007FF6637CFBC2]\n\t(No symbol) [0x00007FF6637BF2E4]\n\tBaseThreadInitThunk [0x00007FFC46B97374+20]\n\tRtlUserThreadStart [0x00007FFC47F5CC91+33]", "trace": "self = <test_cases.test_admin_login.Test_01_Admin_Login object at 0x0000013BEDE9E850>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a40e8736755727a848b263ac3d8b5dae\")>\n\n    @pytest.mark.sanity\n    @pytest.mark.regression\n    def test_login_verification(self, setup):\n        self.logger.info(\"****************login_verification***********************\")\n        self.driver = setup\n    \n        self.driver.get(self.page_url)\n    \n        self.admin_lp = Admin_Login_Page(self.driver)\n        self.admin_lp.enter_username(self.textbox_username)\n        self.admin_lp.enter_password(self.textbox_password)\n        self.admin_lp.enter_login()\n    \n        time.sleep(5)\n    \n>       act_dashboard_text = self.driver.find_element(\n            By.XPATH, \"//span[@class='title']\"\n        ).text\n\ntest_cases\\test_admin_login.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000013BEDE9FED0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6637BF2E4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC46B97374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC47F5CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class='title']\"}\nE         (Session info: chrome=121.0.6167.161); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF663BA7012+3522402]\nE       \t(No symbol) [0x00007FF6637C8352]\nE       \t(No symbol) [0x00007FF663675ABB]\nE       \t(No symbol) [0x00007FF6636BBF0E]\nE       \t(No symbol) [0x00007FF6636BC08C]\nE       \t(No symbol) [0x00007FF6636FE437]\nE       \t(No symbol) [0x00007FF6636DF09F]\nE       \t(No symbol) [0x00007FF6636FBDA3]\nE       \t(No symbol) [0x00007FF6636DEE03]\nE       \t(No symbol) [0x00007FF6636AF4D4]\nE       \t(No symbol) [0x00007FF6636B05F1]\nE       \tGetHandleVerifier [0x00007FF663BD9B9D+3730157]\nE       \tGetHandleVerifier [0x00007FF663C2F02D+4079485]\nE       \tGetHandleVerifier [0x00007FF663C275D3+4048163]\nE       \tGetHandleVerifier [0x00007FF6638FA649+718233]\nE       \t(No symbol) [0x00007FF6637D4A3F]\nE       \t(No symbol) [0x00007FF6637CFA94]\nE       \t(No symbol) [0x00007FF6637CFBC2]\nE       \t(No symbol) [0x00007FF6637BF2E4]\nE       \tBaseThreadInitThunk [0x00007FFC46B97374+20]\nE       \tRtlUserThreadStart [0x00007FFC47F5CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "Failed_Screen_Shot", "source": "761f0a3d-2861-409d-959d-937a95871cb3-attachment.png", "type": "image/png"}, {"name": "log", "source": "8900ed7f-6db5-4573-80ed-e88a624a4a02-attachment.txt", "type": "text/plain"}], "start": 1741263287953, "stop": 1741263295219, "uuid": "c828e433-1a24-4c3b-9604-11ecc8bbff03", "historyId": "1b29434d4c1d011327cd28ed23f163ff", "testCaseId": "1b29434d4c1d011327cd28ed23f163ff", "fullName": "test_admin_login.Test_01_Admin_Login#test_login_verification", "labels": [{"name": "tag", "value": "regression"}, {"name": "tag", "value": "sanity"}, {"name": "suite", "value": "test_admin_login"}, {"name": "subSuite", "value": "Test_01_Admin_Login"}, {"name": "host", "value": "Sadat"}, {"name": "thread", "value": "6404-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_admin_login"}]}